import express from "express";
import multer from "multer";
import path from "path";
import { conn } from "../dbconnect";

export const router = express.Router();

// üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ multer ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå "uploads"
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads/");
  },
  filename: (req, file, cb) => {
    const uniqueSuffix = Date.now() + "-" + Math.round(Math.random() * 1e9);
    cb(null, uniqueSuffix + path.extname(file.originalname)); // ‡πÄ‡∏ä‡πà‡∏ô: 16965232123.jpg
  },
});

// üõ° ‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞ JPEG / PNG
const fileFilter = (
  req: express.Request,
  file: Express.Multer.File,
  cb: multer.FileFilterCallback
) => {
  const allowedTypes = ["image/jpeg", "image/png"];
  if (allowedTypes.includes(file.mimetype)) {
    cb(null, true);
  } else {
    cb(null, false);
  }
};

const upload = multer({ storage: storage, fileFilter: fileFilter });

// POST ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà
router.post("/addgame", upload.single("Gimage"), (req, res) => {
  const { Gname, Gprice, sold, category, detail } = req.body;
  const Gimage = req.file ? req.file.filename : null; // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ

  if (!Gname || !Gprice || !category || !detail) {
    return res.status(400).json({
      success: false,
      message: "‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö",
    });
  }

  const sql =
    "INSERT INTO games (Gname, Gimage, Gprice, sold, category, detail) VALUES (?, ?, ?, ?, ?, ?)";
  conn.query(
    sql,
    [Gname, Gimage, Gprice, sold || 0, category, detail],
    (err, result) => {
      if (err) {
        console.error("DB ERROR:", err);
        return res.status(500).json({
          success: false,
          message: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
          error: err,
        });
      }

      return res.json({
        success: true,
        message: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ",
        Gimage: Gimage,
      });
    }
  );
});

// GET ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get("/", (req, res) => {
  const sql = "SELECT * FROM games ORDER BY id DESC";
  conn.query(sql, (err, result) => {
    if (err) {
      console.error("DB ERROR:", err);
      return res.status(500).json({
        success: false,
        message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡πÑ‡∏î‡πâ",
        error: err,
      });
    }
    res.json(result);
  });
});

// GET ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡∏≤‡∏° id
router.get("/:id", (req, res) => {
  const id = req.params.id;

  const sql = "SELECT * FROM games WHERE id = ?";
  conn.query(sql, [id], (err, result: any[]) => {
    if (err) {
      console.error("DB ERROR:", err);
      return res.status(500).json({
        success: false,
        message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡πÑ‡∏î‡πâ",
        error: err,
      });
    }

    if (result.length === 0) {
      return res.status(404).json({
        success: false,
        message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
      });
    }

    res.json(result[0]); // ‡∏™‡πà‡∏á‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  });
});

// DELETE ‡∏•‡∏ö‡πÄ‡∏Å‡∏°‡∏ï‡∏≤‡∏° id
router.delete('/:id', (req, res) => {
  const id = req.params.id;
  const sql = 'DELETE FROM games WHERE id = ?';

  conn.query(sql, [id], (err, result) => {
    if (err) {
      console.error('DB ERROR:', err);
      return res.status(500).json({
        success: false,
        message: '‡∏•‡∏ö‡πÄ‡∏Å‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        error: err,
      });
    }

    res.json({
      success: true,
      message: '‡∏•‡∏ö‡πÄ‡∏Å‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ',
    });
  });
});

// PUT ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏Å‡∏° (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Gname, Gprice, category, detail, Gimage)
router.put('/:id', upload.single("Gimage"), (req, res) => {
  const id = req.params.id;
  const { Gname, Gprice, category, detail } = req.body;
  const Gimage = req.file ? req.file.filename : null;

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
  if (!Gname || !Gprice || !category || !detail) {
    return res.status(400).json({
      success: false,
      message: "‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö",
    });
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á SQL statement ‡πÅ‡∏ö‡∏ö dynamic ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° update ‡∏£‡∏π‡∏õ‡∏î‡πâ‡∏ß‡∏¢
  let sql = `
    UPDATE games SET 
      Gname = ?, 
      Gprice = ?, 
      category = ?, 
      detail = ?
      ${Gimage ? ', Gimage = ?' : ''}
    WHERE id = ?
  `;

  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° params ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö SQL
  const params = Gimage
    ? [Gname, Gprice, category, detail, Gimage, id]
    : [Gname, Gprice, category, detail, id];

  conn.query(sql, params, (err, result) => {
    if (err) {
      console.error('DB Error:', err);
      return res.status(500).json({ success: false, message: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏Å‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', error: err });
    }
    res.json({ success: true, message: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ' });
  });
});
